@layer reset, theme, layout, templates;

@layer reset {
  *,
  *::before,
  *::after {
    box-sizing: border-box;
  }
}

@layer theme {
  :root {
    --layout-fluid-min: 225px;
    --layout-default-repeat: 4;
    --layout-default-gap: 16px;
  }

  ul {
    list-style: none;
    padding: 0;
    margin: 0;
  }
}

@layer layout {
  /* grid container with three equally sized columns that take up one fraction (1fr) of the available space with a gap */
  .repeating-grid {
    --p-grid-span: var(--grid-span, --layout-grid-span);
    --p-grid-repeat: var(--grid-repeat, var(--layout-default-repeat));
    --p-repeating-grid-gap: var(--grid-gap, var(--layout-default-gap));

    display: grid;
    grid-template-columns: repeat(var(--p-grid-repeat), 1fr);
    gap: var(--p-repeating-grid-gap);
  }

  .repeating-flex {
    --p-flex-repeat: var(--flex-repeat, var(--layout-default-repeat));
    --p-repeating-flex-gap: var(--flex-gap, var(--layout-default-gap));
    --p-gap-count: calc(var(--p-flex-repeat) - 1);
    --p-gap-repeater-calc: calc(var(--p-repeating-flex-gap) / var(--p-flex-repeat) * var(--p-gap-count));

    display: flex;
    flex-wrap: wrap;
    gap: var(--p-repeating-flex-gap);

    >* {
      flex: 1 1 calc((100% / var(--p-flex-repeat)) - var(--p-gap-repeater-calc));
    }
  }

  .fluid-grid {
    --p-fluid-grid-min: var(--fluid-grid-min, var(--layout-fluid-min));
    --p-fluid-grid-gap: var(--grid-gap, var(--layout-default-gap));

    display: grid;
    grid-template-columns: repeat(auto-fit, minmax(min(var(--p-fluid-grid-min), 100%), 1fr));
    gap: var(--p-fluid-grid-gap);
  }

  .fluid-flex {
    --p-fluid-flex-min: var(--fluid-flex-min, var(--layout-fluid-min));
    --p-fluid-flex-gap: var(--flex-gap, var(--layout-default-gap));

    display: flex;
    flex-wrap: wrap;
    gap: var(--p-fluid-flex-gap);

    >* {
      flex: 1 1 var(--p-fluid-flex-min);
    }
  }

  /* Utilities */
  .subgrid-cols {
    display: flex;
    gap: var(--subgrid-gap, 0);

    >* {
      flex: 1;
    }
  }

  .subgrid-rows {
    &:has(> :nth-child(1):last-child) {
      --subgrid-rows: 1;
    }

    &:has(> :nth-child(2):last-child) {
      --subgrid-rows: 2;
    }

    &:has(> :nth-child(3):last-child) {
      --subgrid-rows: 3;
    }

    &:has(> :nth-child(4):last-child) {
      --subgrid-rows: 4;
    }

    &:has(> :nth-child(5):last-child) {
      --subgrid-rows: 5;
    }

    >* {
      display: grid;
      gap: var(--subgrid-gap, 0);
      grid-row: auto / span var(--subgrid-rows, 5);
      grid-template-rows: subgrid;
    }

    :is(.fluid-grid:not(.subgrid-rows),
      .repeating-grid:not(.subgrid-rows),
      .repeating-flex,
      .fluid-flex) {
      >* {
        container: var(--grid-item-container, grid-item) / inline-size;
      }
    }
  }

  /* spanning grid columns */
  .grid-col-span-2 {
    grid-column-end: span 2;
  }

  .grid-col-span-3 {
    grid-column-end: span 3;
  }
}

@layer templates {
  body[class*="-template"] {
    --template-left-width: 80%;
    --template-right-width: 20%;

    .carousel-wrapper {
      max-width: 1920px;
      aspect-ratio: 1920 / 800;
      margin: 0 auto;
    }

    .section {
      @media (width <=1280px) {
        .section {
          padding: 0 20px;
        }
      }

      @media (width <=992px) {
        .section {
          padding: 0 10px;
        }
      }
    }

    .content-wrapper {
      padding-top: 30px;
      display: flex;

      /* bring the aside below the content */
      @media (width <=991px) {
        display: block;
      }

      .fluid-grid {
        grid-template-columns: 65% 35%;

        @media (max-width: 768px) {
          grid-template-columns: 1fr;
        }
      }

      .repeating-grid {
        --p-right-width: var(--right-col-width, var(--template-right-width));
        --p-left-width: var(--left-col-width, var(--template-left-width));
        --grid-repeat: 2;

        /* override the aside width in custom template */
        grid-template-columns: var(--p-left-width) var(--p-right-width);
      }

      .content {
        flex: 0 0 75%;

        .repeating-grid {
          --left-col-width: 65%;
          --right-col-width: 35%;
          --grid-gap: 0;
        }

        @media (max-width: 991px) {
          .repeating-grid {
            grid-template-columns: 1fr;

            .tabs-wrapper {
              grid-column: span 1;
            }
          }
        }
      }

      .left {
        padding-right: 10px;
      }

      .right {
        margin-top: 5px;
      }

      aside {
        flex: 0 0 25%;
        padding: 0 15px;

        @media (width <=991px) {
          padding-top: 30px;
          padding-left: 0;
          padding-right: 0
        }
      }
    }

    .full-width {
      max-width: 100% !important;
    }
  }

  /* breadcrumbs should be moved to a breadcrumb template block */
  .breadcrumbs {
    font-size: .8em;
    color: #c8c8c8;
    padding: 8px 0;
    user-select: none;
  }

  .breadcrumbs a {
    color: #aaa;
    text-decoration: none;
  }

  .breadcrumbs a:hover {
    color: #0055b9;
  }

  .strike-through {
    text-decoration: line-through;
  }
}
